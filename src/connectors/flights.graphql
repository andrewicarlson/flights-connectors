extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.10"
    import: ["@key", "@shareable"]
  )
  @link(
    url: "https://specs.apollo.dev/connect/v0.1"
    import: ["@source", "@connect"]
  )
  @source(
    name: "flight_radar"
    http: {
      baseURL: "https://fr24api.flightradar24.com/api/"
      headers: [
        { name: "Authorization", value: "Bearer {$config.flightRadarApiKey}" }
        { name: "Accept-Version", value: "v1"}
      ]
    }
  )
  @source(
    name: "faa"
    http: {
      baseURL: "https://aviationweather.gov/api/data/"
    }
  )

type Airport @key(fields: "icao") {
  icao: String!
  name: String
  iataId: String
  outboundFlights: [Position]
    @connect(
      source: "flight_radar"
      http: {
          GET: "live/flight-positions/full?airports=outbound:{$this.icao}"
      }
      selection: """
      $.data {
        fr24_id
        hex 
        callsign
        lat
        lon
        track
        alt
        gspeed
        vspeed
        squawk
        timestamp
        orig_icao
        dest_icao
      }
      """
    )
  weather: Weather
    @connect(
        source: "faa"
        http: {
            GET: "metar?ids={$this.icao}&format=json"
        }
        selection: """
        $->first {
            icao: icaoId
            temp  
            dewp
            wdir
            wspd
            visib
            altim
            precip
            elev
        }
        """
    )
}

type Weather {
  icao: String!
  temp: Float
  dewp: Float
  wdir: Int
  wspd: Int
  visib: Int
  altim: Int
  precip: Float
  elev: Int
}

type Position {
  fr24_id: String!
  hex: String
  callsign: String
  lat: Float!
  lon: Float!
  track: Int!
  alt: Int!
  gspeed: Int!
  vspeed: Int!
  squawk: String!
  timestamp: String!
  orig_icao: String!
  dest_icao: String!
  from: Airport
    @connect(
      source: "flight_radar"
      http: {
          GET: "static/airports/{$this.orig_icao}/light"
      }
      selection: """
      icao
      iataId: iata
      name
      """
    )
  to: Airport
    @connect(
      source: "flight_radar"
      http: {
          GET: "static/airports/{$this.dest_icao}/light"
      }
      selection: """
      icao
      iataId: iata
      name
      """
    )
}

type Query {
  airport(icao: String!): Airport
    @connect(
      source: "flight_radar"
      http: {
          GET: "static/airports/{$args.icao}/light"
      }
      selection: """
      icao
      iataId: iata
      name
      """
      entity: true
    )
}