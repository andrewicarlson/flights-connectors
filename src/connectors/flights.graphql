extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.10"
    import: ["@key", "@shareable"]
  )
  @link(
    url: "https://specs.apollo.dev/connect/v0.1"
    import: ["@source", "@connect"]
  )
  @source(
    name: "flight_radar"
    http: {
      baseURL: "https://fr24api.flightradar24.com/api/"
      headers: [
        { name: "Authorization", value: "Bearer {$config.flightRadarApiKey}" }
        { name: "Accept-Version", value: "v1"}
      ]
    }
  )
  @source(
    name: "faa"
    http: {
      baseURL: "https://aviationweather.gov/api/data/"
    }
  )

type Country {
  code: String
  name: String
}

type Timezone {
  name: String
  offset: Int
}

type Airport {
  icao: String!
  name: String
  weather: Weather
  lat: Float
  lon: Float
  elevation: Int
  city: String
  state: String
  country: Country
  timezone: Timezone
  outboundFlights: [Position]
    @connect(
      source: "flight_radar"
      http: {
          GET: "live/flight-positions/full?airports=outbound:{$this.icao}&limit=3"
      }
      selection: """
      $.data {
        fr24_id
        hex 
        callsign
        lat
        lon
        track
        alt
        gspeed
        vspeed
        squawk
        operating_as
        timestamp
        orig_icao
        dest_icao
      }
      """
    )
  inboundFlights: [Position]
    @connect(
      source: "flight_radar"
      http: {
          GET: "live/flight-positions/full?airports=inbound:{$this.icao}&limit=3"
      }
      selection: """
      $.data {
        fr24_id
        hex 
        callsign
        lat
        lon
        track
        alt
        gspeed
        vspeed
        squawk
        operating_as
        timestamp
        orig_icao
        dest_icao
      }
      """
    )
}

type Weather {
  icao: String
  temp: Float
  dewp: Float
  wdir: Int
  wspd: Int
  visib: Int
  altim: Int
  precip: Float
}

type Position {
  fr24_id: String!
  hex: String
  callsign: String
  lat: Float!
  lon: Float!
  track: Int!
  alt: Int!
  gspeed: Int!
  vspeed: Int!
  squawk: String!
  operating_as: String!
  timestamp: String!
  orig_icao: String!
  dest_icao: String!
  from: Airport!
  @connect(
    source: "flight_radar"
    http: {
        GET: "static/airports/{$this.orig_icao}/full"
    }
    selection: """
    icao
    name
    lat
    lon
    elevation
    city
    state
    country {
      code
      name
    }
    timezone {
      name
      offset
    }
    """
  )
  @connect(
      source: "faa"
      http: {
          GET: "metar?ids={$this.orig_icao}&format=json"
      }
      selection: """
      $->first {
        weather: {
          icao: icaoId
          temp  
          dewp
          wdir
          wspd
          visib
          altim
          precip
        }
        elevation: elev
        lat
        lon
      }
      """
  )

  to: Airport
    @connect(
      source: "flight_radar"
      http: {
          GET: "static/airports/{$this.dest_icao}/full"
      }
      selection: """
      icao
      name
      lat
      lon
      elevation
      city
      state
      country {
        code
        name
      }
      timezone {
        name
        offset
      }
      weather: {
        icao: $this.dest_icao
      }
      """
    )
    @connect(
      source: "faa"
      http: {
          GET: "metar?ids={$this.dest_icao}&format=json"
      }
      selection: """
      $->first {
        weather: {
          icao: icaoId
          temp  
          dewp
          wdir
          wspd
          visib
          altim
          precip
        }
        elevation: elev
        lat
        lon
      }
      """
  )
}

type Query {
  airport(icao: String!): Airport
    @connect(
      source: "flight_radar"
      http: {
          GET: "static/airports/{$args.icao}/full"
      }
      selection: """
      icao
      name
      lat
      lon
      elevation
      city
      state
      country {
        code
        name
      }
      timezone {
        name
        offset
      }
      """
    )
    @connect(
        source: "faa"
        http: {
            GET: "metar?ids={$args.icao}&format=json"
        }
        selection: """
        $->first {
          weather: {
            icao: icaoId
            temp  
            dewp
            wdir
            wspd
            visib
            altim
            precip
          }
          elevation: elev
          lat
          lon
        }
        """
    )
    # @connect(
    #   source: "flight_radar"
    #   http: {
    #       GET: "live/flight-positions/full?airports=outbound:{$args.icao}&limit=3"
    #   }
    #   selection: """
    #   outboundFlights: {
    #     $.data {
    #       fr24_id
    #       hex 
    #       callsign
    #       lat
    #       lon
    #       track
    #       alt
    #       gspeed
    #       vspeed
    #       squawk
    #       operating_as
    #       timestamp
    #       orig_icao
    #       dest_icao
    #     }
    #   }
    #   """
    # )
    # @connect(
    #   source: "flight_radar"
    #   http: {
    #       GET: "live/flight-positions/full?airports=inbound:{$args.icao}&limit=3"
    #   }
    #   selection: """
    #   inboundFlights: {
    #     $.data {
    #       fr24_id
    #       hex 
    #       callsign
    #       lat
    #       lon
    #       track
    #       alt
    #       gspeed
    #       vspeed
    #       squawk
    #       operating_as
    #       timestamp
    #       orig_icao
    #       dest_icao
    #     }
    #   }
    #   """
    # )
}